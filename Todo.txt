SQLiteHelper:

- Generate a execution queue with execution log. Async Execution
- Add all commands to log and execute in certain intervals

https://stackoverflow.com/questions/53183370/c-sharp-how-to-start-an-async-method-without-await-its-complete

CommonControls
- Improve ImageZoom, especial zooming and start Position of scrollbars on screen and positioning, overwork generation of the circle
- rework color picker

Lightvector
- Add save function for curves, etc
- finish and add more features

Make a separate Interpreter Project with Mathmatics as an example

Enum at RunTime

https://stackoverflow.com/questions/857414/dynamically-create-an-enum


// Get the current application domain for the current thread.
AppDomain currentDomain = AppDomain.CurrentDomain;

// Create a dynamic assembly in the current application domain,
// and allow it to be executed and saved to disk.
AssemblyName aName = new AssemblyName("TempAssembly");
AssemblyBuilder ab = currentDomain.DefineDynamicAssembly(aName, AssemblyBuilderAccess.RunAndSave);

// Define a dynamic module in "TempAssembly" assembly. For a single-
// module assembly, the module has the same name as the assembly.
ModuleBuilder mb = ab.DefineDynamicModule(aName.Name, aName.Name + ".dll");

// Define a public enumeration with the name "Elevation" and an 
// underlying type of Integer.
EnumBuilder eb = mb.DefineEnum("Elevation", TypeAttributes.Public, typeof(int));

// Define two members, "High" and "Low".
eb.DefineLiteral("Low", 0);
eb.DefineLiteral("High", 1);

// Create the type and save the assembly.
Type finished = eb.CreateType();
ab.Save(aName.Name + ".dll");



Using:

System.Reflection.Assembly ass = System.Reflection.Assembly.LoadFrom("TempAssembly.dll");
System.Type enumTest = ass.GetType("Elevation");
string[] values = enumTest .GetEnumNames();


TODO Debugger
Add search lines with like, not like!
